@using Microsoft.AspNetCore.Mvc.ModelBinding;
@using Newtonsoft.Json;
@using Smart_Invoice.Models;
@using Smart_Invoice.Models.Invoices;
@using Smart_Invoice.Models.Products;
@using Smart_Invoice;
@model InvoiceViewModel;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="/css/Edit_Invoice.css" />
<h1>Create bill</h1>


<hr />
<div class="alert fade show" role="alert" style="border:2px solid #0dcaf0;">
  We had a go at filling in some of your data. Check that the <span style="background-color: powderblue;padding:5px;">pre-filled details in blue</span> are correct.
  
</div>
 <form method="post" id="EditForm" class="needs-validation" novalidate>
    <div class="row">
        <!-- Column 1 content -->
        <div class="column" style="width:40%">
            <img src="data:image/png;base64,@ViewBag.Base64Image" width="60%" onclick="openPopup()"/>
            <div class="popup" id="popup-container">
                <!-- Popup content (image) -->
                <img src="data:image/png;base64,@ViewBag.Base64Image" class="popup-content" id="popup-image" alt="Large Image">

                <!-- Close button -->
                <span class="close-btn" onclick="closePopup()">&times;</span>
            </div>
        </div>
        <style>
              /* Popup container */
            .popup {
                display: none;
                position: fixed;
                z-index: 1;
                padding-top: 100px;
                left: 0;
                top: 0;
                width: 100%;
                height: 100%;
                overflow: auto;
                background-color: rgba(0, 0, 0, 0.9);
            }

      /* Popup content (image) */
            .popup-content {
                margin: auto;
                display: block;
   
            }

    
            .close-btn {
                position: absolute;
                top: 15px;
                right: 15px;
                font-size: 30px;
                color: #f1f1f1;
                cursor: pointer;
            }
        </style>
        <div class="column" style="width:60%">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger" role="alert">
                    @Html.ValidationSummary(true)
                </div>
            }
       
            @Html.AntiForgeryToken()
                @if (Model.ProductInvoice != null)
                {
                    <div class="form-group row">
                    
                        @if(ViewData["companyFound"]== "notFound")
                        {
                            <span class="text-danger"> Company was not found ! please select a supplier</span>
                            <label for="Company_Name" class="col-sm-2 col-form-label">Supplier: </label>
                            <div class="col-sm-8">
                            <select class="form-select is-invalid" id="Company_Name" asp-for="ProductInvoice.Company.Company_Name" aria-required="true" asp-items="ViewBag.Companies" required></select>
                            </div>
                            <button class="btn btn-primary add-company-btn col-md-2" id="@Model.ProductInvoice.Company.Company_Name">Create Company</button>
                        }
                        else{
                            <label for="Company_Name" class="col-sm-2 col-form-label">Supplier: </label>
                            <div class="col-sm-8">
                            <select class="form-select" id="Company_Name" asp-for="ProductInvoice.Company.Company_Name" aria-required="true" asp-items="ViewBag.Companies" required></select>
                            </div>
                        }
                    </div>
                    
                 
                    <div class="form-group row">
                        <label for="Invoice_Number" class="col-sm-2 col-form-label">Invoice number </label>
                        <div class="col-sm-8">
                            <input class="form-control" id="Invoice_Number" style="background-color:powderblue"  
                        asp-for="ProductInvoice.Invoice_Number" aria-required="true" 
                        value="@Model.ProductInvoice.Invoice_Number" required/>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="Invoice_Date" class="col-sm-2 col-form-label">Date of issue </label>
                        <div class="col-sm-8">
                            <input class="form-control" id="Invoice_Date" 
                        asp-for="ProductInvoice.Invoice_Date" aria-required="true"  style="background-color:powderblue" 
                        value="@Model.ProductInvoice.Invoice_Date" required/>
                        </div>
                    </div>
                     <div class="form-group row">
                        <label for="Invoice_Due" class="col-sm-2 col-form-label">Due date </label>
                        <div class="col-sm-8">
                            <input type="date" class="form-control" id="Invoice_Due" 
                                name="Invoice_Due" aria-required="true" required/>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="AmountExclusive" class="col-sm-2 col-form-label">Amounts are </label>
                        <div class="col-sm-8">
                            <select class="form-control form-select-sm" id="AmountExclusive">
                                <option>TAX Inclusive</option>
                                <option>TAX Exclusive</option>
                            </select>
                        </div>
                    </div>
                     <div class="form-group row">
                        <label asp-for="ProductInvoice.CurrancyCode" class="col-sm-2 col-form-label"> </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control" id="Invoice_Due" 
                                asp-for="ProductInvoice.CurrancyCode" aria-required="true" required/>
                        </div>
                    </div>

                
                
                  
                   
                }
            
         

                @if (Model.UtilityInvoice != null)
                {
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Company_Name" 
                        asp-for="UtilityInvoice.Company.Company_Name" aria-required="true" 
                        value="@Model.UtilityInvoice.Company.Company_Name" required/>
                        <label>Company Name</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Invoice_Number" 
                        asp-for="UtilityInvoice.Invoice_Number" aria-required="true" 
                        value="@Model.UtilityInvoice.Invoice_Number" required/>
                        <label>Invoice Number</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Invoice_Date" 
                        asp-for="UtilityInvoice.Invoice_Date" aria-required="true" 
                        value="@Model.UtilityInvoice.Invoice_Date" required/>
                        <label>Invoice Date</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Service_Number" 
                        asp-for="UtilityInvoice.Service_Number" aria-required="true" 
                        value="@Model.UtilityInvoice.Service_Number" required/>
                        <label>Serice Number</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Meter_Number" 
                        asp-for="UtilityInvoice.Meter_Number" aria-required="true" 
                        value="@Model.UtilityInvoice.Meter_Number" required/>
                        <label>Meter Number</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Previous_Reading_Date" 
                        asp-for="UtilityInvoice.Previous_Reading_Date" aria-required="true" 
                        value="@Model.UtilityInvoice.Previous_Reading_Date" required/>
                        <label>Previous Reading Date</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Current_Reading" 
                        asp-for="UtilityInvoice.Current_Reading" aria-required="true" 
                        value="@Model.UtilityInvoice.Current_Reading" required/>
                        <label>Current Reading</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Category" 
                        asp-for="UtilityInvoice.Category" aria-required="true" 
                        value="@Model.UtilityInvoice.Category" required/>
                        <label>Category</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Previous_Debt" 
                        asp-for="UtilityInvoice.Previous_Debt" aria-required="true" 
                        value="@Model.UtilityInvoice.Previous_Debt" required/>
                        <label>Previous Debt</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Subtotal" 
                        asp-for="UtilityInvoice.Subtotal" aria-required="true" 
                        value="@Model.UtilityInvoice.Subtotal" required/>
                        <label>Invoice SubTotal</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Tax" 
                        asp-for="UtilityInvoice.Tax" aria-required="true" 
                        value="@Model.UtilityInvoice.Tax" required/>
                        <label>Invoice TAX</label>
                    </div>
                    <div class="form-floating" style="margin-bottom:0.5em">
                        <input class="form-control" id="Total" 
                    asp-for="UtilityInvoice.Total" aria-required="true" 
                    value="@Model.UtilityInvoice.Total" required/>
                    <label>Invoice Total</label>
                    </div>

                }
            
      
   
        </div>
        
        <div>
            <h4>Products</h4>
            <hr />
            <input class="btn btn-primary" type="button" id="addRow" style="float:right" value="add Row" />

             <table id="productTable" class="table">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Unit</th>
                        <th>Unit Price</th>
                        <th>Quantity</th>
                        <th>Discount (%)</th>
                        <th>Amount (ILS)</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @{
                        var k = 0;
                        foreach(var product in Model.ProductInvoice.Items)
                        {
                              
                            var InvProduct = Model.ProductMatches.Where(p => p.Product.ToLower().Equals(product.Name.ToLower())).FirstOrDefault();
                            <tr class="dtrg-group">
                                <td>
                                    @if(Model.ProductMatches.Count>=k && InvProduct == null || Model.ProductMatches.Count>=k &&  InvProduct.Invoiceproduct == null)
                                    {
                                        <span class="text-danger">Product was not found </span>
                                        <input type="text" class="form-control unit-input is-invalid" asp-for="ProductInvoice.Items[k].Name" value="@product.Name" />
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control unit-input" asp-for="ProductInvoice.Items[k].Name" value="@InvProduct.Invoiceproduct.Name" />
                                    }
                                    
                                </td>
                                <td>
                                    <input type="text" class="form-control unit-input" asp-for="ProductInvoice.Items[k].Unit" value="@product.Unit" placeholder="PCS" required />
                                </td>
                                <td>
                                    @if(InvProduct == null)
                                    {
                                        <input type="text" class="form-control unitPrice-input" asp-for="ProductInvoice.Items[k].UnitPrice" value="@product.UnitPrice" />

                                    }
                                    else
                                    {
                                        if (InvProduct.Invoiceproduct != null)
                                        {
                                            if (InvProduct.Invoiceproduct.CostPrice != product.UnitPrice)
                                            {
                                                <span class="text-danger">Stored price is: @InvProduct.Invoiceproduct.CostPrice</span>
                                                <input type="text" class="form-control unitPrice-input" asp-for="ProductInvoice.Items[k].UnitPrice" value="@product.UnitPrice" />
                                            }
                                        }
                                        else
                                        {
                                            <input type="text" class="form-control unitPrice-input" asp-for="ProductInvoice.Items[k].UnitPrice" value="@product.UnitPrice" />
                                        }
                                    }

                                </td>
                                <td><input type="text" class="form-control quantity-input" asp-for="ProductInvoice.Items[k].Quantity" value="@product.Quantity" /></td>
                                <td><input type="text" class="form-control discount-input" asp-for="ProductInvoice.Items[k].Discount" value="@product.Discount" /></td>
                                <td><input placeholder="0.00" class="form-control total-input" asp-for="ProductInvoice.Items[k].Total"  value="@product.Total" /></td>
                                <td><button class="btn btn-danger remove-row">Remove</button></td>
                                <td>
                                    @if(InvProduct== null || InvProduct.Invoiceproduct == null)
                                    {
                                         <button class="btn btn-info add-product text-white" style="display:flex">
                                         <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#FFFFFF"><path d="M0 0h24v24H0z" fill="none"/><path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/></svg>
                                         Product</button>
                                    }
                                </td>
                            </tr>
                            k++;
                        }
                     
                    }
                    

                </tbody>
            </table>
            <div class="row" style="flex-direction:row-reverse">
                
                <style>
                    .d-flex input {
                        width:35%
                    }
                </style>
                <div class="col-md-3 m-2">
                    <div class="form-group d-flex" style="justify-content:space-between">
                        <label asp-for="ProductInvoice.Subtotal"  class="control-label">Subtotal</label>
                        <input asp-for="ProductInvoice.Subtotal" id="subtotal" class="form-control"  style="background-color:transparent"/>
                    </div>
                    <span asp-validation-for="ProductInvoice.Subtotal" class="text-danger"></span>
                    <div class="form-group d-flex" style="justify-content:space-between">
                        <label asp-for="ProductInvoice.Tax" class="control-label"></label>
                        <input asp-for="ProductInvoice.Tax" id="tax" class="form-control" style="background-color:transparent" />
                    </div>
                                    <span asp-validation-for="ProductInvoice.Tax" class="text-danger"></span>

                    <div class="form-group d-flex" style="justify-content:space-between">
                        <label asp-for="ProductInvoice.Total" class="control-label">Total amount</label>
                        <input asp-for="ProductInvoice.Total" class="form-control" id="total" style="background-color:transparent" />
                    </div>
                    <span asp-validation-for="ProductInvoice.Total" class="text-danger"></span>

                    

                    
                </div>
            </div>
            <div style="display: flex; justify-content: center;">
               <button class="btn btn-success" type="submit">Submit</button>
            </div>
        </div>
    </form>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="myModalLabel">Create new Product</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closePopUp(this)"><span aria-hidden="true">&times;</span></button>
      </div>
      <div class="modal-body">
          @Html.Partial("_CreateProduct", new Smart_Invoice.Models.Products.Product())
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="CreateCompany" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="myModalLabel">Create new Company</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closePopUp(this)"><span aria-hidden="true">&times;</span></button>
      </div>
      <div class="modal-body">
          @Html.PartialAsync("CreateCompanyPartial", new Smart_Invoice.Models.Company())
      </div>
    </div>
  </div>
</div>
           

@*
    TODO: add zoom button using scale
    TODO: add Rotate button using transform: rotate(90deg)
*@
@section Scripts {
      @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css" />
    <script>
        $(document).ready(function () {
            var table = $('#productTable').DataTable({
                ordering: false,
                paging: false,
                searching: false,
            });
            var i = 1;
            recalculateTotals();

            // Add row button click event
            $("#addRow").click(function addRow (event) {
                event.preventDefault();
                var rowNode = table.row.add([
                    '<input type="text" class="form-control unit-input" name="Products['+i+'].Name" ></select>',
                    '<input type="text" class="form-control unit-input" name="Products['+i+'].Unit" />',
                    '<input type="text" class="form-control unitPrice-input" name="Products['+i+'].UnitPrice"  />',
                    '<input type="text" class="form-control quantity-input" name="Products['+i+'].Quantity" />',
                    '<input type="text" class="form-control discount-input" name="Products['+i+'].Discount" />',
                    '<input type="text" class="form-control total-input" name="Products['+i+'].Total"  />',
                    '<button class="btn btn-danger remove-row">Remove</button>',
                    ''

                   
                ]).draw(false).node();
                recalculateTotals();
                i++;
                // Apply DataTables class to newly added row
                $(rowNode).addClass('dtrg-group');

                // Reinitialize row order
                table.order([0, 'asc']).draw();
            });
            $(document).on('click', '.remove-row', function () {
                table.row($(this).closest('tr')).remove().draw();
                recalculateTotals();
            });
            $(document).on('click', '.add-product', function (event) {
                event.preventDefault();
                var id = $(this).closest('tr').find('input[name^="ProductInvoice.Items"]').val();
                myfunction2(id);
            });
             $(document).on('input', '.quantity-input', '.discount-input', function () {
                recalculateTotals();
            });
            $(document).on('input','.discount-input', function () {
                recalculateTotals();
            });
            
        });
        

        function openPopup() {
            const popup = document.getElementById("popup-container");
            const popupImage = document.getElementById("popup-image");
            popup.style.display = "block";
        }

        function closePopup() {
            const popup = document.getElementById("popup-container");
            popup.style.display = "none";
        }
        function recalculateTotals() {
            var subTotal = 0;
            var Tax = parseFloat($("#tax").val());
            
            
            $('.dtrg-group').each(function () {
                var quantity = $(this).find('.quantity-input').val();
                var unitPrice = $(this).find('.unitPrice-input').val();
                var discount = $(this).find('.discount-input').val();
                var total = (unitPrice - (unitPrice*discount)/100)*quantity;
                $(this).find('.total-input').val(total.toFixed(2));
                subTotal += total;
            });

            // Update the subtotal
            $('#subtotal').val(subTotal.toFixed(2));
            $('#total').val((subTotal + Tax).toFixed(2));
        }
           
    </script>
}


<div>
    <a asp-action="Index">Back to List</a>
</div>

<script src="~/js/Invoices/EditScript.js"></script>
